[
  {
    "description": "normalize",
    "name": "regex",
    "ext": "normal",
    "list": [
      {
        "description": "special char 01",
        "action": "delete",
        "pattern": "\\u00A0",
        "log": "lineno"
      },
      {
        "description": "special char 02",
        "action": "delete",
        "pattern": "\\u2028",
        "log": "lineno"
      },
      {
        "description": "escapes \\t\\v\\f",
        "action": "replace",
        "pattern": "[\\t\\v\\f ]+",
        "repl": " "
      },
      {
        "description": "&lt;",
        "action": "replace",
        "pattern": "&lt;",
        "repl": "<"
      },
      {
        "description": "&gt;",
        "action": "replace",
        "pattern": "&gt;",
        "repl": ">"
      },
      {
        "description": "#{equal}",
        "action": "replace",
        "pattern": "#{equal}",
        "repl": "="
      },
      {
        "description": "^Q",
        "action": "replace",
        "pattern": "^Q",
        "repl": "\""
      },
      {
        "description": "convert \\n",
        "action": "replace",
        "pattern": "\\\\n",
        "repl": " "
      },
      {
        "description": "tokenize multilanguages",
        "action": "replace",
        "pattern": "(?<=[^\\x20-\\x7e])([\\x21-\\x7e])",
        "repl": " \\1",
        "apply_to": "target",
        "unicode": false
      },
      {
        "description": "tokenize multilanguages",
        "action": "replace",
        "pattern": "([\\x21-\\x7e])(?=[^\\x20-\\x7e])",
        "repl": "\\1 ",
        "apply_to": "target",
        "unicode": false
      }
    ]
  },
  {
    "description": "tag and ph",
    "name": "regex",
    "ext": "tag",
    "list": [
      {
        "description": "eph1",
        "action": "replace",
        "pattern": "\\\\{(\\d+)\\\\}",
        "repl": "{\\1}"
      },
      {
        "description": "eph2",
        "action": "replace",
        "pattern": "\\[\\[(\\d+)\\]\\]",
        "repl": "{\\1}"
      },
      {
        "description": "ph tag",
        "action": "replace",
        "pattern": "<ph.*?>({\\d+})</ph>",
        "repl": " \\1 "
      },
      {
        "description": "link tag",
        "action": "replace",
        "pattern": "<a.*?>(.*?)</a>",
        "repl": " \\1 "
      },
      {
        "description": "font tag",
        "action": "replace",
        "pattern": "<font.*?>(.*?)</font>",
        "repl": " \\1 "
      },
      {
        "description": "bold tag",
        "action": "replace",
        "pattern": "<b>(.*?)</b>",
        "repl": " \\1 "
      },
      {
        "description": "p tag",
        "action": "replace",
        "pattern": "{p:\\w+?}",
        "repl": "{p}"
      },
      {
        "description": "i tag",
        "action": "replace",
        "pattern": "{i:\\w+?}",
        "repl": "{i}"
      },
      {
        "description": "span tag",
        "action": "replace",
        "pattern": "<span.*?>(.*?)</span>",
        "repl": " \\1 "
      },
      {
        "description": "cdata",
        "action": "replace",
        "pattern": "<!\\[CDATA\\[(.*?)\\]\\]>",
        "repl": " \\1 "
      }
    ]
  },
  {
    "description": "pre tok clean",
    "name": "regex",
    "ext": "pre_tok",
    "list": [
      {
        "description": "URL1",
        "action": "replace",
        "repl": "$URL",
        "pattern": "((?#Protocal)((http|https|ftp)\\:\\/\\/)?(?#Subdomains)(\\w+\\.)+(?#Rootdomain)(com|org|net|gov)([^\\s{<\"'']*)(?=([{<\"']|([\\.\\,;?!](\\s|$)))))"
      },
      {
        "description": "URL2",
        "action": "replace",
        "repl": "$URL",
        "pattern": "((?#Protocal)((http|https|ftp)\\:\\/\\/)?(?#Subdomains)(\\w+\\.)+(?#Rootdomain)(com|org|net|gov)([^\\s{<]*)(?=(\\s|$)))"
      },
      {
        "description": "URL",
        "action": "replace",
        "pattern": "((?#Protocol)(?:(?:ht|f)tp(?:s?)\\:\\/\\/|~\\/|\\/)?(?#Username:Password)(?:\\w+:\\w+@)?(?#Subdomains)(?:(?:[-\\w]+\\.)+(?#TopLevel Domains)(?:com|org|net|gov|mil|biz|info|mobi|name|aero|jobs|museum|travel|[a-z]{2}))(?#Port)(?::[\\d]{1,5})?(?#Directories)(?:(?:(?:\\/(?:[-\\w~!$+|.,=]|%[a-f\\d]{2})+)+|\\/)+|\\?|#)?(?#Query)(?:(?:\\?(?:[-\\w~!$+|.,*:]|%[a-f\\d{2}])+=?(?:[-\\w~!$+|.,*:=]|%[a-f\\d]{2})*)(?:&(?:[-\\w~!$+|.,*:]|%[a-f\\d{2}])+=?(?:[-\\w~!$+|.,*:=]|%[a-f\\d]{2})*)*)*(?#Anchor)(?:#(?:[-\\w~!$+|.,*:=]|%[a-f\\d]{2})*)?)(?=($|<|{))",
        "repl": "$URL",
        "log": "match"
      }
    ]
  },
  {
    "name": "tokenize",
    "ext": "tok",
    "tool": {
      "zh_CN": {
        "name": "stanford_segmenter",
        "model": "ctb",
        "keep_whitespace": true,
        "nbest": 0
      },
      "ja_JP": {
        "name": "chasen"
      },
      "en_US": {
        "name": "moses"
      },
      "fr_FR": {
        "name": "moses"
      }
    }
  },
  {
    "name": "regex",
    "ext": "post_tok",
    "list": [
      {
        "description": "detoken placeholder",
        "action": "replace",
        "pattern": "{ (\\d+) }",
        "repl": "{\\1}"
      },
      {
        "description": "detoken parentheses",
        "action": "replace",
        "pattern": "\\(\\s+\\)",
        "repl": "()"
      },
      {
        "description": "detoken URL PH",
        "action": "replace",
        "pattern": "\\$ URL",
        "repl": "$URL"
      },
      {
        "description": "vertical line",
        "action": "replace",
        "pattern": "\\|",
        "repl": "vl"
      }
    ]
  },
  {
    "name": "length_limit",
    "ext": "llimit",
    "source": [1,80],
    "target": [1,80],
    "log": "lineno"
  },
  {
    "name": "sentence_ratio",
    "ext": "lratio",
    "ratio": 9,
    "log": "lineno"
  },
  {
    "name": "length_diff",
    "ext": "ldiff",
    "diff": 20,
    "log": "lineno"
  },
  {
    "name": "lowercase",
    "ext": "lower"
  }
]